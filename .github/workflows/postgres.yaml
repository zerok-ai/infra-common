name: postgres
on:
  workflow_dispatch:
   inputs:
        CLUSTER_NAME:
            description: 'CLUSTER_NAME'
            required: true
            default: 'zerok-c2s-poc'
        GKE_ZONE:
            description: 'GKE_ZONE'
            required: true
            default: 'us-west1-b'
        DEPLOYMENT_NAME:
            description: 'DEPLOYMENT_NAME'
            required: true
            default: 'postgres'
        NAMESPACE:
            description: 'NAMESPACE'
            required: true
            default: 'postgres'
        CONFIG:
            description: 'CONFIG'
            required: true
            default: 'standalone'
env:
  GKE_SA_KEY: ${{ secrets.GKE_SA_KEY }}
  CLUSTER_NAME: ${{ github.event.inputs.CLUSTER_NAME }}
  GKE_ZONE : ${{ github.event.inputs.GKE_ZONE }}
  DEPLOYMENT_NAME:  ${{ github.event.inputs.DEPLOYMENT_NAME }}
  NAMESPACE:  ${{ github.event.inputs.NAMESPACE }}
  CONFIG:  ${{ github.event.inputs.CONFIG }}
  CHART: "oci://registry-1.docker.io/bitnamicharts/postgresql"
jobs:
  setup:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3        
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ env.GKE_SA_KEY }}'
        
      - uses: google-github-actions/setup-gcloud@v0
        with:
          version: latest
          export_default_credentials: true


      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
           cluster_name: '${{ env.CLUSTER_NAME }}'
           location: '${{ env.GKE_ZONE }}'
   
      
      - name: Set up tools
        run: |-
           curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
           chmod 700 get_helm.sh
           ./get_helm.sh
           gcloud components install kubectl
          
      - name: Deploy
        run: |-
             helm install  upgrade $DEPLOYMENT_NAME $CHART -f redis/$CONFIG.yaml \
              --create-namespace --namespace $NAMESPACE 
